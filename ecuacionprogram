<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Analizador de Ecuaciones</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjs/11.8.0/math.min.js"></script>
  <script src="https://cdn.plot.ly/plotly-2.27.0.min.js"></script>
  <style>
    :root {
      --primary-color: #D32F2F;
      --secondary-color: #1E1E1E;
      --accent-color: #FF5252;
      --text-color: #FFFFFF;
      --background-color: #121212;
      --card-bg: #2C2C2C;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      margin: 0;
      padding: 0;
      background-color: var(--background-color);
      color: var(--text-color);
    }

    header {
      background-color: var(--primary-color);
      color: white;
      padding: 20px;
      text-align: center;
      box-shadow: 0 2px 10px rgba(0,0,0,0.3);
    }

    main {
      max-width: 800px;
      margin: 30px auto;
      padding: 20px;
      background-color: var(--secondary-color);
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    }

    textarea {
      width: 100%;
      padding: 15px;
      border: 1px solid #555;
      border-radius: 8px;
      font-size: 16px;
      resize: vertical;
      background-color: var(--card-bg);
      color: var(--text-color);
    }

    button {
      margin-top: 15px;
      width: 100%;
      padding: 15px;
      background-color: var(--accent-color);
      color: white;
      font-size: 16px;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #ff6666;
    }

    .output {
      margin-top: 25px;
      background-color: var(--card-bg);
      padding: 20px;
      border-radius: 10px;
      border-left: 5px solid var(--primary-color);
      box-shadow: 0 2px 8px rgba(0,0,0,0.4);
      white-space: pre-wrap;
    }

    #plot {
      margin-top: 30px;
      height: 450px;
    }
  </style>
</head>
<body>
  <header>
    <h1>üîç Analizador de Ecuaciones</h1>
    <p>Visualiza y comprende tus funciones paso a paso</p>
  </header>

  <main>
    <label for="input"><strong>Ingresa una funci√≥n:</strong></label>
    <p>Ejemplo: <code>x^2 - 4*x + 3</code> o <code>f(x) = x^2 - 4*x + 3</code></p>
    <textarea id="input" rows="2" placeholder="Escribe aqu√≠ tu ecuaci√≥n..."></textarea>
    <button onclick="analizarEcuacion()">Analizar Funci√≥n</button>

    <div id="salida" class="output"></div>
    <div class="output"><strong>üìâ As√≠ntotas encontradas:</strong>
      <div id="asintotas"></div>
    </div>
    <div id="pasos" class="output"></div>
    <div id="plot"></div>
  </main>

  <script>
    function analizarEcuacion() {
      const input = document.getElementById("input").value;
      const expr = input.replace(/^f\(x\)\s*=\s*/, '');
      let scope = {x: 0};

      try {
        const node = math.parse(expr);
        const compiled = node.compile();

        const x_vals = math.range(-50, 50, 0.2).toArray();
        const y_vals = x_vals.map(x => {
          scope.x = x;
          try {
            return compiled.evaluate(scope);
          } catch {
            return NaN;
          }
        });

        let salida = `üìò Expresi√≥n ingresada: f(x) = ${expr}\n`;
        salida += `üìå Dominio: Aproximadamente todos los reales, excepto donde la funci√≥n no est√° definida (divisiones por cero o ra√≠ces de n√∫meros negativos)\n`;

        const simplified = math.simplify(expr);
        salida += `üßÆ Forma simplificada: ${simplified.toString()}\n`;

        const finiteY = y_vals.filter(y => !isNaN(y) && isFinite(y));
        const minY = Math.min(...finiteY);
        const maxY = Math.max(...finiteY);
        salida += `üìà Rango aproximado: [${minY.toFixed(2)}, ${maxY.toFixed(2)}]\n`;

        let asintotasText = '';
        let trazosAsintotas = [];

        // As√≠ntotas verticales
        if (expr.includes('/')) {
          const partes = expr.split('/');
          const denominador = partes[1];
          try {
            const soluciones = math.solve(denominador, 'x');
            if (Array.isArray(soluciones)) {
              soluciones.forEach(v => {
                asintotasText += `‚Ä¢ Vertical: x = ${v}\n`;
                trazosAsintotas.push({
                  type: 'line',
                  x0: v, x1: v,
                  y0: minY, y1: maxY,
                  line: {
                    color: 'white',
                    width: 2,
                    dash: 'dashdot'
                  }
                });
              });
            }
          } catch (e) {
            asintotasText += `‚ö†Ô∏è No se pudo determinar as√≠ntotas verticales con precisi√≥n.\n`;
          }

          // As√≠ntota horizontal
          try {
            const num = math.simplify(partes[0]);
            const den = math.simplify(partes[1]);
            const degNum = num.filter(node => node.isSymbolNode && node.name === 'x').length;
            const degDen = den.filter(node => node.isSymbolNode && node.name === 'x').length;

            if (degNum < degDen) {
              asintotasText += `‚Ä¢ Horizontal: y = 0\n`;
              trazosAsintotas.push({
                type: 'line',
                x0: -50, x1: 50,
                y0: 0, y1: 0,
                line: {
                  color: 'white',
                  width: 2,
                  dash: 'dashdot'
                }
              });
            }
          } catch {}
        }

        document.getElementById("salida").innerText = salida;
        document.getElementById("asintotas").innerText = asintotasText;

        let pasos = `üîé Desarrollo paso a paso:\n`;
        pasos += `1. Expresi√≥n original: f(x) = ${expr}\n`;
        pasos += `2. Simplificaci√≥n algebraica: ${simplified.toString()}\n`;
        pasos += `3. Se detecta tipo de funci√≥n: ${expr.includes('/') ? 'racional' : 'polin√≥mica'}\n`;
        pasos += `4. Se eval√∫a en varios valores para obtener el comportamiento de la gr√°fica.\n`;
        pasos += `5. Dominio identificado excluyendo divisiones por 0.\n`;
        pasos += `6. Se identifican as√≠ntotas verticales y horizontales (si aplica).\n`;
        pasos += `7. Se genera gr√°fica para observar el comportamiento de la funci√≥n.\n`;

        document.getElementById("pasos").innerText = pasos;

        Plotly.newPlot("plot", [
          {
            x: x_vals,
            y: y_vals,
            type: 'scatter',
            mode: 'lines',
            name: 'f(x)',
            line: { color: '#FF5252', width: 3 }
          }
        ], {
          title: `Gr√°fica de f(x)`,
          margin: { t: 40 },
          paper_bgcolor: '#1E1E1E',
          plot_bgcolor: '#2C2C2C',
          font: { color: '#FFFFFF' },
          shapes: trazosAsintotas
        });

      } catch (err) {
        document.getElementById("salida").innerText = `‚ùå Error al analizar la ecuaci√≥n: ${err.message}`;
        document.getElementById("asintotas").innerText = '';
        document.getElementById("pasos").innerText = '';
        Plotly.purge("plot");
      }
    }
  </script>
</body>
</html>
